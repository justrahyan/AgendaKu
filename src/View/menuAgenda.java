/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import Custom.JButtonRounded;
import Services.connector;
import java.awt.Color;
import java.awt.Component;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import java.sql.Timestamp;
import java.text.MessageFormat;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import jtable_custom.JTable_Custom;



/**
 *
 * @author LOQ
 */
public class menuAgenda extends javax.swing.JPanel {
    String oldName = "";
    boolean categorySelected = false;
    

    public menuAgenda() {
        initComponents();
        
        
        JButtonRounded button = new JButtonRounded();
        button.setFillOriginal(new Color(100, 100, 100));
        button.setFillOver(new Color(120, 120, 120));
        button.setFillClick(new Color(80, 80, 80));
        getAllTasks();
        getAllCategories();
        
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelMain = new javax.swing.JPanel();
        panelView = new javax.swing.JPanel();
        pn_main = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        taskTableRoot = new javax.swing.JScrollPane();
        taskTable = new jtable_custom.JTable_Custom();
        jTextFieldSearch = new Custom.JTextFieldRounded();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jButtonRoundedTambah1 = new Custom.JButtonRoundedTambah();
        jButtonRoundedHapus1 = new Custom.JButtonRoundedHapus();
        jButtonRoundedEdit1 = new Custom.JButtonRoundedEdit();
        jButtonRoundedCetak1 = new Custom.JButtonRoundedCetak();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        panelAdd = new javax.swing.JPanel();
        pn_main1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        addTaskName = new Custom.JTextFieldRounded();
        jLabel6 = new javax.swing.JLabel();
        addTaskDesc = new Custom.JTextFieldRounded();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        addTaskStatus = new javax.swing.JComboBox<>();
        addTaskCategory = new javax.swing.JComboBox<>();
        addTaskPriority = new javax.swing.JComboBox<>();
        jButtonRoundedTambah2 = new Custom.JButtonRoundedTambah();
        jButtonRoundedKembali1 = new Custom.JButtonRoundedKembali();
        addTaskDeadline = new Custom.JTextFieldRoundedDate();
        panelUpdate = new javax.swing.JPanel();
        pn_main2 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        editTaskName = new Custom.JTextFieldRounded();
        jLabel14 = new javax.swing.JLabel();
        editTaskDesc = new Custom.JTextFieldRounded();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        editTaskStatus = new javax.swing.JComboBox<>();
        editTaskCategory = new javax.swing.JComboBox<>();
        editTaskPriority = new javax.swing.JComboBox<>();
        editSaveBtn = new Custom.JButtonRoundedTambah();
        jButtonRoundedKembali2 = new Custom.JButtonRoundedKembali();
        editTaskDeadline = new Custom.JTextFieldRoundedDate();

        setLayout(new java.awt.CardLayout());

        panelMain.setBackground(new java.awt.Color(255, 255, 255));
        panelMain.setPreferredSize(new java.awt.Dimension(1095, 585));
        panelMain.setLayout(new java.awt.CardLayout());

        panelView.setBackground(new java.awt.Color(255, 255, 255));
        panelView.setPreferredSize(new java.awt.Dimension(1095, 620));

        pn_main.setBackground(new java.awt.Color(255, 255, 255));
        pn_main.setPreferredSize(new java.awt.Dimension(167, 51));
        pn_main.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pn_mainMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pn_mainMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pn_mainMouseExited(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/calendar-side.png"))); // NOI18N
        jLabel2.setText("jLabel2");

        jLabel3.setFont(new java.awt.Font("Plus Jakarta Sans Medium", 0, 18)); // NOI18N
        jLabel3.setText("Data Agenda");
        jLabel3.setPreferredSize(new java.awt.Dimension(97, 23));

        javax.swing.GroupLayout pn_mainLayout = new javax.swing.GroupLayout(pn_main);
        pn_main.setLayout(pn_mainLayout);
        pn_mainLayout.setHorizontalGroup(
            pn_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_mainLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pn_mainLayout.setVerticalGroup(
            pn_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_mainLayout.createSequentialGroup()
                .addContainerGap(8, Short.MAX_VALUE)
                .addGroup(pn_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8))
        );

        taskTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "No", "Nama Tugas", "Deskripsi", "Deadline", "Prioritas", "Status", "Kategori"
            }
        ));
        taskTable.setFont(new java.awt.Font("Plus Jakarta Sans", 0, 12)); // NOI18N
        taskTable.setShowGrid(true);
        taskTableRoot.setViewportView(taskTable);

        jTextFieldSearch.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jTextFieldSearch.setToolTipText("Cari");
        jTextFieldSearch.setFont(new java.awt.Font("Plus Jakarta Sans Medium", 0, 12)); // NOI18N
        jTextFieldSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSearchActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Default", "Kategori", "Prioritas", "Status" }));
        jComboBox2.setPreferredSize(new java.awt.Dimension(205, 40));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jComboBox2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jComboBox2PropertyChange(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/filter-funnel-01.png"))); // NOI18N
        jLabel1.setPreferredSize(new java.awt.Dimension(35, 40));

        jButtonRoundedTambah1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/tambah-data.png"))); // NOI18N
        jButtonRoundedTambah1.setText("Tambah");
        jButtonRoundedTambah1.setFont(new java.awt.Font("Plus Jakarta Sans Medium", 0, 14)); // NOI18N
        jButtonRoundedTambah1.setIconTextGap(10);
        jButtonRoundedTambah1.setPreferredSize(new java.awt.Dimension(140, 40));
        jButtonRoundedTambah1.setStrokeWidth(0);
        jButtonRoundedTambah1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRoundedTambah1ActionPerformed(evt);
            }
        });

        jButtonRoundedHapus1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/hapus-icon.png"))); // NOI18N
        jButtonRoundedHapus1.setFont(new java.awt.Font("Plus Jakarta Sans Medium", 0, 14)); // NOI18N
        jButtonRoundedHapus1.setIconTextGap(10);
        jButtonRoundedHapus1.setLabel("Hapus");
        jButtonRoundedHapus1.setPreferredSize(new java.awt.Dimension(140, 40));
        jButtonRoundedHapus1.setStrokeWidth(0);
        jButtonRoundedHapus1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRoundedHapus1ActionPerformed(evt);
            }
        });

        jButtonRoundedEdit1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/edit-05.png"))); // NOI18N
        jButtonRoundedEdit1.setFont(new java.awt.Font("Plus Jakarta Sans Medium", 0, 14)); // NOI18N
        jButtonRoundedEdit1.setIconTextGap(10);
        jButtonRoundedEdit1.setLabel("Edit");
        jButtonRoundedEdit1.setPreferredSize(new java.awt.Dimension(140, 40));
        jButtonRoundedEdit1.setStrokeWidth(0);
        jButtonRoundedEdit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRoundedEdit1ActionPerformed(evt);
            }
        });

        jButtonRoundedCetak1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/printer.png"))); // NOI18N
        jButtonRoundedCetak1.setFont(new java.awt.Font("Plus Jakarta Sans Medium", 0, 14)); // NOI18N
        jButtonRoundedCetak1.setIconTextGap(10);
        jButtonRoundedCetak1.setLabel("Cetak");
        jButtonRoundedCetak1.setPreferredSize(new java.awt.Dimension(140, 40));
        jButtonRoundedCetak1.setStrokeWidth(0);
        jButtonRoundedCetak1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRoundedCetak1ActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Default" }));
        jComboBox3.setPreferredSize(new java.awt.Dimension(205, 40));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });
        jComboBox3.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jComboBox3PropertyChange(evt);
            }
        });

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/search-md (1).png"))); // NOI18N

        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/grid-01 (1).png"))); // NOI18N
        jLabel21.setPreferredSize(new java.awt.Dimension(35, 40));

        javax.swing.GroupLayout panelViewLayout = new javax.swing.GroupLayout(panelView);
        panelView.setLayout(panelViewLayout);
        panelViewLayout.setHorizontalGroup(
            panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelViewLayout.createSequentialGroup()
                .addGroup(panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelViewLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelViewLayout.createSequentialGroup()
                            .addGap(22, 22, 22)
                            .addComponent(jButtonRoundedTambah1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(20, 20, 20)
                            .addComponent(jButtonRoundedHapus1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(20, 20, 20)
                            .addComponent(jButtonRoundedEdit1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(20, 20, 20)
                            .addComponent(jButtonRoundedCetak1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(183, 183, 183)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(panelViewLayout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(taskTableRoot, javax.swing.GroupLayout.PREFERRED_SIZE, 1055, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(panelViewLayout.createSequentialGroup()
                            .addGap(22, 22, 22)
                            .addComponent(pn_main, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(559, 559, 559)
                            .addComponent(jLabel20)
                            .addGap(10, 10, 10)
                            .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(20, 20, 20))
        );
        panelViewLayout.setVerticalGroup(
            panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelViewLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pn_main, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelViewLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(12, 12, 12)
                .addGroup(panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonRoundedTambah1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonRoundedHapus1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonRoundedEdit1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonRoundedCetak1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(taskTableRoot, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        panelMain.add(panelView, "card2");

        panelAdd.setBackground(new java.awt.Color(255, 255, 255));
        panelAdd.setPreferredSize(new java.awt.Dimension(1095, 620));

        pn_main1.setBackground(new java.awt.Color(255, 255, 255));
        pn_main1.setPreferredSize(new java.awt.Dimension(251, 51));
        pn_main1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pn_main1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pn_main1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pn_main1MouseExited(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/calendar-side.png"))); // NOI18N
        jLabel4.setText("jLabel2");

        jLabel5.setFont(new java.awt.Font("Plus Jakarta Sans Medium", 0, 18)); // NOI18N
        jLabel5.setText("Tambah Data Agenda");
        jLabel5.setPreferredSize(new java.awt.Dimension(97, 23));

        javax.swing.GroupLayout pn_main1Layout = new javax.swing.GroupLayout(pn_main1);
        pn_main1.setLayout(pn_main1Layout);
        pn_main1Layout.setHorizontalGroup(
            pn_main1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_main1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8))
        );
        pn_main1Layout.setVerticalGroup(
            pn_main1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_main1Layout.createSequentialGroup()
                .addContainerGap(8, Short.MAX_VALUE)
                .addGroup(pn_main1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8))
        );

        addTaskName.setFont(new java.awt.Font("Plus Jakarta Sans", 0, 12)); // NOI18N
        addTaskName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTaskNameActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Plus Jakarta Sans Medium", 0, 12)); // NOI18N
        jLabel6.setText("Nama Tugas");

        addTaskDesc.setFont(new java.awt.Font("Plus Jakarta Sans", 0, 12)); // NOI18N
        addTaskDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTaskDescActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Plus Jakarta Sans Medium", 0, 12)); // NOI18N
        jLabel7.setText("Deskripsi");

        jLabel8.setFont(new java.awt.Font("Plus Jakarta Sans Medium", 0, 12)); // NOI18N
        jLabel8.setText("Deadline");

        jLabel9.setFont(new java.awt.Font("Plus Jakarta Sans Medium", 0, 12)); // NOI18N
        jLabel9.setText("Prioritas");

        jLabel10.setFont(new java.awt.Font("Plus Jakarta Sans Medium", 0, 12)); // NOI18N
        jLabel10.setText("Status");

        jLabel11.setFont(new java.awt.Font("Plus Jakarta Sans Medium", 0, 12)); // NOI18N
        jLabel11.setText("Kategori");

        addTaskStatus.setFont(new java.awt.Font("Plus Jakarta Sans", 0, 12)); // NOI18N
        addTaskStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih status", "Belum dikerja", "Sedang dikerja", "Selesai" }));

        addTaskCategory.setFont(new java.awt.Font("Plus Jakarta Sans", 0, 12)); // NOI18N
        addTaskCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih kategori", "Kuliah", "Pekerjaan", "Pribadi" }));

        addTaskPriority.setFont(new java.awt.Font("Plus Jakarta Sans", 0, 12)); // NOI18N
        addTaskPriority.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih prioritas", "Rendah", "Sedang", "Tinggi" }));

        jButtonRoundedTambah2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/save-01.png"))); // NOI18N
        jButtonRoundedTambah2.setText("Simpan");
        jButtonRoundedTambah2.setFont(new java.awt.Font("Plus Jakarta Sans Medium", 0, 14)); // NOI18N
        jButtonRoundedTambah2.setIconTextGap(10);
        jButtonRoundedTambah2.setPreferredSize(new java.awt.Dimension(140, 40));
        jButtonRoundedTambah2.setStrokeWidth(0);
        jButtonRoundedTambah2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRoundedTambah2ActionPerformed(evt);
            }
        });

        jButtonRoundedKembali1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/log-out-04.png"))); // NOI18N
        jButtonRoundedKembali1.setFont(new java.awt.Font("Plus Jakarta Sans Medium", 0, 14)); // NOI18N
        jButtonRoundedKembali1.setLabel("Kembali");
        jButtonRoundedKembali1.setPreferredSize(new java.awt.Dimension(140, 40));
        jButtonRoundedKembali1.setStrokeWidth(0);
        jButtonRoundedKembali1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRoundedKembali1ActionPerformed(evt);
            }
        });

        addTaskDeadline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTaskDeadlineActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAddLayout = new javax.swing.GroupLayout(panelAdd);
        panelAdd.setLayout(panelAddLayout);
        panelAddLayout.setHorizontalGroup(
            panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addTaskDesc, javax.swing.GroupLayout.DEFAULT_SIZE, 1055, Short.MAX_VALUE)
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addComponent(jButtonRoundedTambah2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jButtonRoundedKembali1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pn_main1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addTaskName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addTaskStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addTaskCategory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addTaskPriority, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addTaskDeadline, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        panelAddLayout.setVerticalGroup(
            panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(pn_main1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRoundedKembali1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonRoundedTambah2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jLabel6)
                .addGap(10, 10, 10)
                .addComponent(addTaskName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jLabel7)
                .addGap(10, 10, 10)
                .addComponent(addTaskDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addTaskDeadline, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jLabel9)
                .addGap(10, 10, 10)
                .addComponent(addTaskPriority, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jLabel10)
                .addGap(10, 10, 10)
                .addComponent(addTaskStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jLabel11)
                .addGap(10, 10, 10)
                .addComponent(addTaskCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelMain.add(panelAdd, "card2");

        panelUpdate.setBackground(new java.awt.Color(255, 255, 255));
        panelUpdate.setPreferredSize(new java.awt.Dimension(1095, 620));

        pn_main2.setBackground(new java.awt.Color(255, 255, 255));
        pn_main2.setPreferredSize(new java.awt.Dimension(251, 51));
        pn_main2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pn_main2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pn_main2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pn_main2MouseExited(evt);
            }
        });

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/calendar-side.png"))); // NOI18N
        jLabel12.setText("jLabel2");

        jLabel13.setFont(new java.awt.Font("Plus Jakarta Sans Medium", 0, 18)); // NOI18N
        jLabel13.setText("Edit Data Agenda");
        jLabel13.setPreferredSize(new java.awt.Dimension(97, 23));

        javax.swing.GroupLayout pn_main2Layout = new javax.swing.GroupLayout(pn_main2);
        pn_main2.setLayout(pn_main2Layout);
        pn_main2Layout.setHorizontalGroup(
            pn_main2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_main2Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8))
        );
        pn_main2Layout.setVerticalGroup(
            pn_main2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_main2Layout.createSequentialGroup()
                .addContainerGap(8, Short.MAX_VALUE)
                .addGroup(pn_main2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8))
        );

        editTaskName.setFont(new java.awt.Font("Plus Jakarta Sans", 0, 12)); // NOI18N
        editTaskName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editTaskNameActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Plus Jakarta Sans Medium", 0, 12)); // NOI18N
        jLabel14.setText("Nama Tugas");

        editTaskDesc.setFont(new java.awt.Font("Plus Jakarta Sans", 0, 12)); // NOI18N
        editTaskDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editTaskDescActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Plus Jakarta Sans Medium", 0, 12)); // NOI18N
        jLabel15.setText("Deskripsi");

        jLabel16.setFont(new java.awt.Font("Plus Jakarta Sans Medium", 0, 12)); // NOI18N
        jLabel16.setText("Deadline");

        jLabel17.setFont(new java.awt.Font("Plus Jakarta Sans Medium", 0, 12)); // NOI18N
        jLabel17.setText("Prioritas");

        jLabel18.setFont(new java.awt.Font("Plus Jakarta Sans Medium", 0, 12)); // NOI18N
        jLabel18.setText("Status");

        jLabel19.setFont(new java.awt.Font("Plus Jakarta Sans Medium", 0, 12)); // NOI18N
        jLabel19.setText("Kategori");

        editTaskStatus.setFont(new java.awt.Font("Plus Jakarta Sans", 0, 12)); // NOI18N
        editTaskStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih status", "Belum dikerja", "Sedang dikerja", "Selesai" }));

        editTaskCategory.setFont(new java.awt.Font("Plus Jakarta Sans", 0, 12)); // NOI18N
        editTaskCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih kategori", "Kuliah", "Pekerjaan", "Pribadi" }));

        editTaskPriority.setFont(new java.awt.Font("Plus Jakarta Sans", 0, 12)); // NOI18N
        editTaskPriority.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih prioritas", "Rendah", "Sedang", "Tinggi" }));

        editSaveBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/save-01.png"))); // NOI18N
        editSaveBtn.setText("Simpan");
        editSaveBtn.setFont(new java.awt.Font("Plus Jakarta Sans Medium", 0, 14)); // NOI18N
        editSaveBtn.setIconTextGap(10);
        editSaveBtn.setPreferredSize(new java.awt.Dimension(140, 40));
        editSaveBtn.setStrokeWidth(0);
        editSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editSaveBtnActionPerformed(evt);
            }
        });

        jButtonRoundedKembali2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/log-out-04.png"))); // NOI18N
        jButtonRoundedKembali2.setFont(new java.awt.Font("Plus Jakarta Sans Medium", 0, 14)); // NOI18N
        jButtonRoundedKembali2.setLabel("Kembali");
        jButtonRoundedKembali2.setPreferredSize(new java.awt.Dimension(140, 40));
        jButtonRoundedKembali2.setStrokeWidth(0);
        jButtonRoundedKembali2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRoundedKembali2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelUpdateLayout = new javax.swing.GroupLayout(panelUpdate);
        panelUpdate.setLayout(panelUpdateLayout);
        panelUpdateLayout.setHorizontalGroup(
            panelUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUpdateLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panelUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelUpdateLayout.createSequentialGroup()
                        .addComponent(editSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jButtonRoundedKembali2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editTaskDesc, javax.swing.GroupLayout.DEFAULT_SIZE, 1055, Short.MAX_VALUE)
                    .addComponent(pn_main2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editTaskName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editTaskStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editTaskCategory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editTaskPriority, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editTaskDeadline, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        panelUpdateLayout.setVerticalGroup(
            panelUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUpdateLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(pn_main2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRoundedKembali2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jLabel14)
                .addGap(10, 10, 10)
                .addComponent(editTaskName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jLabel15)
                .addGap(10, 10, 10)
                .addComponent(editTaskDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editTaskDeadline, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(jLabel17)
                .addGap(10, 10, 10)
                .addComponent(editTaskPriority, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jLabel18)
                .addGap(10, 10, 10)
                .addComponent(editTaskStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jLabel19)
                .addGap(10, 10, 10)
                .addComponent(editTaskCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        panelMain.add(panelUpdate, "card2");

        add(panelMain, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void addTaskNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTaskNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addTaskNameActionPerformed

    private void pn_main1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pn_main1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_pn_main1MouseExited

    private void pn_main1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pn_main1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_pn_main1MouseEntered

    private void pn_main1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pn_main1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_pn_main1MouseClicked

    private void pn_main2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pn_main2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_pn_main2MouseClicked

    private void pn_main2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pn_main2MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_pn_main2MouseEntered

    private void pn_main2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pn_main2MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_pn_main2MouseExited

    private void editTaskNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editTaskNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editTaskNameActionPerformed

    private void editTaskDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editTaskDescActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editTaskDescActionPerformed

    private void jButtonRoundedKembali1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRoundedKembali1ActionPerformed
        panelMain.removeAll();
        panelMain.add(panelView);
        panelMain.repaint();
        panelMain.revalidate();
    }//GEN-LAST:event_jButtonRoundedKembali1ActionPerformed

    private void jButtonRoundedKembali2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRoundedKembali2ActionPerformed
        panelMain.removeAll();
        panelMain.add(panelView);
        panelMain.repaint();
        panelMain.revalidate();
    }//GEN-LAST:event_jButtonRoundedKembali2ActionPerformed

    private void jButtonRoundedTambah2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRoundedTambah2ActionPerformed
        // TODO add your handling code here:
        String name = addTaskName.getText();
        String description = addTaskDesc.getText();
        String status = addTaskStatus.getSelectedItem().toString();
        String priority = addTaskPriority.getSelectedItem().toString();
        String  category = addTaskCategory.getSelectedItem().toString();
        String deadline = addTaskDeadline.getText();
        
        try {
            Connection connection = connector.getConnection();
            String sql = "insert into tasks (user_id,name,description, deadline,priority,status,category) value(?,?,?,?,?,?,?)";
            
            PreparedStatement statement = connection.prepareStatement(sql);
            statement.setString(1, FormLogin.userId );
            statement.setString(2, name);
            statement.setString(3, description);
            statement.setString(4, deadline);
            statement.setString(5, priority );
            statement.setString(6, status );
            statement.setString(7,category );
            
            int result = statement.executeUpdate();
            if(result > 0){
                JOptionPane.showMessageDialog(this, "Task berhasil ditambahkan!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                getAllTasksByOrder();
                panelMain.removeAll();
                panelMain.add(panelView);
                panelMain.repaint();
                panelMain.revalidate();
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal menambahkan task. Silakan coba lagi.", "Error", JOptionPane.ERROR_MESSAGE);
            System.out.println("Gagal membuat task");
        }
    }//GEN-LAST:event_jButtonRoundedTambah2ActionPerformed

    private void editSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editSaveBtnActionPerformed
        // TODO add your handling code here:
        String name = editTaskName.getText();
        
        String desc = editTaskDesc.getText();
        String priority = editTaskPriority.getSelectedItem().toString();
        String status = editTaskStatus.getSelectedItem().toString();
        String deadline = editTaskDeadline.getText();
        String category = editTaskCategory.getSelectedItem().toString();
        
        try {
            Connection connection = connector.getConnection();
            String sql = "update tasks set name = ?, description = ?, deadline = ?,status = ?, priority = ?, category = ? where name = ?";
            PreparedStatement statement = connection.prepareStatement(sql);
            statement.setString(1, name);
            statement.setString(2, desc);
            statement.setString(3, deadline);
            statement.setString(4, status);
            statement.setString(5, priority);
            statement.setString(6, category);
            statement.setString(7, oldName);
            int result = statement.executeUpdate();
            
            if(result < 1){
                JOptionPane.showMessageDialog(this, "Gagal memperbarui task. Silakan coba lagi.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
           getAllTasksByOrder();
            panelMain.removeAll();
            panelMain.add(panelView);
            panelMain.repaint();
            panelMain.revalidate();
            JOptionPane.showMessageDialog(this, "Task berhasil diperbarui!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                     
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal memperbarui task. Silakan coba lagi.", "Error", JOptionPane.ERROR_MESSAGE);
            System.out.println("Error saat update data " + e.getMessage());
        }
        
    }//GEN-LAST:event_editSaveBtnActionPerformed

    private void addTaskDeadlineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTaskDeadlineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addTaskDeadlineActionPerformed

    private void addTaskDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTaskDescActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addTaskDescActionPerformed

    private void jComboBox3PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jComboBox3PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox3PropertyChange

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
        clearTable();
        getAllTasksByOrder();
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jButtonRoundedEdit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRoundedEdit1ActionPerformed
        panelMain.removeAll();
        panelMain.add(panelUpdate);
        panelMain.repaint();
        panelMain.revalidate();

        int i = taskTable.getSelectedRow();
        if(i < 0){
            return;
        }

        String name =  taskTable.getValueAt(i, 1).toString();
        oldName = name;
        String desc = taskTable.getValueAt(i, 2).toString();
        String deadline = taskTable.getValueAt(i, 3).toString();
        String priority = taskTable.getValueAt(i, 4).toString();
        String status = taskTable.getValueAt(i, 5).toString();
        String category = taskTable.getValueAt(i, 6).toString();

        editTaskName.setText(name);
        editTaskDesc.setText(desc);
        editTaskDeadline.setText(deadline);
        editTaskPriority.setSelectedItem(priority);
        editTaskStatus.setSelectedItem(status);
        editTaskCategory.setSelectedItem(category);

    }//GEN-LAST:event_jButtonRoundedEdit1ActionPerformed

    private void jButtonRoundedHapus1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRoundedHapus1ActionPerformed
        // TODO add your handling code here:
        //        System.out.println("View.menuAgenda.jButtonRoundedHapus1ActionPerformed()");
        int i = taskTable.getSelectedRow();
        if(i < 0){
            JOptionPane.showMessageDialog(this, "Pilih task yang ingin dihapus!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String name = (String) taskTable.getValueAt(i, 1);
        int confirm = JOptionPane.showConfirmDialog(this,
            "Apakah Anda yakin ingin menghapus task '" + name + "'? Tindakan ini tidak dapat diulang.",
            "Konfirmasi Hapus",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.WARNING_MESSAGE);

        if(confirm == JOptionPane.YES_OPTION){
            try {
                Connection connection = connector.getConnection();
                String sql = "delete from tasks where name = ?";
                PreparedStatement statement = connection.prepareStatement(sql);
                statement.setString(1, name);

                int result = statement.executeUpdate();
                if (result > 0) {
                    JOptionPane.showMessageDialog(this, "Task berhasil dihapus.", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                    for(int row=0; row < taskTable.getRowCount(); row ++){
                        for(int col=0; col < taskTable.getColumnCount(); col++){
                            taskTable.setValueAt("", row, col);
                        }
                    }
                    getAllTasksByOrder();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Gagal menghapus task. Silakan coba lagi.", "Error", JOptionPane.ERROR_MESSAGE);
                System.out.println("Gagal hapus");
            }
        }
    }//GEN-LAST:event_jButtonRoundedHapus1ActionPerformed

    private void jButtonRoundedTambah1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRoundedTambah1ActionPerformed
        panelMain.removeAll();
        panelMain.add(panelAdd);
        panelMain.repaint();
        panelMain.revalidate();
    }//GEN-LAST:event_jButtonRoundedTambah1ActionPerformed

    private void jComboBox2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jComboBox2PropertyChange
        // TODO add your handling code here:

    }//GEN-LAST:event_jComboBox2PropertyChange

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
        String selectedItem = jComboBox2.getSelectedItem().toString();
        System.out.println("item yang dipilih : " + selectedItem);

        getAllTasksByOrder();

    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jTextFieldSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSearchActionPerformed
        String searchQuery = jTextFieldSearch.getText().trim();
        getAllTask(searchQuery);
    }//GEN-LAST:event_jTextFieldSearchActionPerformed

    private void pn_mainMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pn_mainMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_pn_mainMouseExited

    private void pn_mainMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pn_mainMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_pn_mainMouseEntered

    private void pn_mainMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pn_mainMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_pn_mainMouseClicked

    private void jButtonRoundedCetak1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRoundedCetak1ActionPerformed
try {
        // Gunakan tabel yang sudah ada di GUI
        MessageFormat header = new MessageFormat("Laporan Data Agenda");
        MessageFormat footer = new MessageFormat("Halaman {0}");
        
        // Cetak tabel
        boolean complete = taskTable.print(JTable.PrintMode.FIT_WIDTH, header, footer);

        // Tampilkan pesan hasil cetak
        if (complete) {
            JOptionPane.showMessageDialog(this, "Cetak selesai!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Cetak dibatalkan!", "Informasi", JOptionPane.WARNING_MESSAGE);
        }
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat mencetak: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_jButtonRoundedCetak1ActionPerformed

    public class PriorityRenderer extends DefaultTableCellRenderer {
    @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

            if (value != null) {
                String priority = value.toString().toLowerCase();

                // Atur warna berdasarkan prioritas
                switch (priority) {
                    case "rendah":
                        c.setBackground(Color.decode("#3396D9")); // Biru untuk prioritas rendah
                        c.setForeground(Color.WHITE); // Teks putih
                        break;
                    case "sedang":
                        c.setBackground(Color.decode("#FDA868")); // Oranye untuk prioritas sedang
                        c.setForeground(Color.WHITE); // Teks putih
                        break;
                    case "tinggi":
                        c.setBackground(Color.decode("#FF0137")); // Merah untuk prioritas tinggi
                        c.setForeground(Color.WHITE); // Teks putih
                        break;
                    default:
                        c.setBackground(Color.WHITE); // Default (jika tidak cocok)
                        c.setForeground(Color.BLACK);
                        break;
                }
            } else {
                // Jika value null, gunakan default
                c.setBackground(Color.WHITE);
                c.setForeground(Color.BLACK);
            }

            // Prioritaskan warna seleksi jika baris dipilih
            if (isSelected) {
                c.setBackground(table.getSelectionBackground());
                c.setForeground(table.getSelectionForeground());
            }

            return c;
        }
    }

    public class DeadlineRenderer extends DefaultTableCellRenderer {

    @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            Component cell = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

            try {
                // Parsing tanggal dari nilai kolom
                String deadline = table.getValueAt(row, 3).toString();
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                Date deadlineDate = dateFormat.parse(deadline);

                Date currentDate = new Date();
                long diffInMillies = deadlineDate.getTime() - currentDate.getTime();
                long diffInDays = TimeUnit.MILLISECONDS.toDays(diffInMillies);

                if (diffInDays < 0) {
                    // Jika sudah melewati deadline
                    cell.setBackground(Color.RED);
                    cell.setForeground(Color.WHITE); // Supaya teks tetap terlihat
                } else if (diffInDays <= 5) {
                    // Jika mendekati deadline (<= 5 hari)
                    cell.setBackground(Color.ORANGE);
                    cell.setForeground(Color.BLACK); // Kontras untuk teks
                } else {
                    // Jika masih aman
                    cell.setBackground(Color.WHITE);
                    cell.setForeground(Color.BLACK);
                }
                if (isSelected) {
                    cell.setBackground(table.getSelectionBackground());
                    cell.setForeground(table.getSelectionForeground());
                }
            } catch (Exception e) {
                cell.setBackground(Color.WHITE);
                cell.setForeground(Color.BLACK);
            }

            return cell;
        }
    }
    
    public void getAllTasks() {
    try {
        Connection connection = connector.getConnection();
        String sql = "";
        
        if (jComboBox3.getSelectedItem().toString().equals("Default")) {
            categorySelected = false;
            sql = "SELECT * FROM tasks WHERE user_id = ? ORDER BY deadline";
        } else {
            categorySelected = true;
            sql = "SELECT * FROM tasks WHERE user_id = ? AND category = ? ORDER BY deadline";
        }

        PreparedStatement statement = connection.prepareStatement(sql);

        if (categorySelected) {
            statement.setString(1, FormLogin.userId);
            statement.setString(2, jComboBox3.getSelectedItem().toString());
        } else {
            statement.setString(1, FormLogin.userId);
        }

        ResultSet result = statement.executeQuery();
        int r = 0;
        int i = 1;
        while (result.next()) {
            // Ambil data dari result set
            String name = result.getString("name");
            String description = result.getString("description");
            Timestamp deadlineTimestamp = result.getTimestamp("deadline");
            String priority = result.getString("priority");
            String status = result.getString("status");
            String category = result.getString("category");

            // Isi data ke tabel
            taskTable.setValueAt(i, r, 0); // Kolom No
            taskTable.setValueAt(name, r, 1); // Kolom Nama Tugas
            taskTable.setValueAt(description, r, 2); // Kolom Deskripsi
            taskTable.setValueAt(deadlineTimestamp.toString(), r, 3); // Kolom Deadline
            taskTable.setValueAt(priority, r, 4); // Kolom Prioritas
            taskTable.setValueAt(status, r, 5); // Kolom Status
            taskTable.setValueAt(category, r, 6); // Kolom Kategori

            i++;
            r++;
        }

        // Terapkan renderer khusus setelah data dimasukkan
        for (int col = 0; col < taskTable.getColumnCount(); col++) {
            taskTable.getColumnModel().getColumn(col).setCellRenderer(new DeadlineRenderer());
        }

        // Terapkan renderer khusus untuk prioritas (jika ada)
        taskTable.getColumnModel().getColumn(4).setCellRenderer(new PriorityRenderer());

        // Repaint tabel
        taskTable.revalidate();
        taskTable.repaint();

        } catch (Exception e) {
            System.out.println("Error mengambil data dari database: " + e.getMessage());
        }
    }
    
    public void getAllTaskOrderByPriority(){
         try {
             
            Connection connection = connector.getConnection();
             String sql = "";
             
             if(jComboBox3.getSelectedItem().toString().equals("Default")){
                 categorySelected = false;
                 sql = "select * from tasks where user_id = ? order by field(priority,'Tinggi','Sedang','Rendah')";
             }else{
                 categorySelected = true;
                 sql = "select * from tasks where user_id = ? and category = ? order by field(priority,'Tinggi','Sedang','Rendah')";
             }
             PreparedStatement statement =  connection.prepareStatement(sql);
             
             if(categorySelected == true){
                   statement.setString(1, FormLogin.userId);
                   statement.setString(2, jComboBox3.getSelectedItem().toString());
             }else{
                 statement.setString(1, FormLogin.userId);
             }
           
           
            ResultSet result =  statement.executeQuery();
             int i = 1;
             int r = 0;
            
            while(result.next()){
                System.out.println("Iterasi " + r );
                String name = result.getString("name");
                String description = result.getString("description");
                String deadline = result.getString("deadline");
                String priority = result.getString("priority");
                String status = result.getString("status");
                String category = result.getString("category");
                 
                
                taskTable.setValueAt(i, r, 0);
                taskTable.setValueAt(name, r, 1);
                taskTable.setValueAt(description, r, 2);
                taskTable.setValueAt(deadline, r, 3);
                taskTable.setValueAt(priority, r, 4);
                 taskTable.setValueAt(status, r, 5);
                 taskTable.setValueAt(category, r, 6);
                
                i++;
                r++;
            }
         }catch(Exception e){
             System.out.println("Gagal ambil data ");
         }
    }
    
    public void getAllTaskOrderByStatus(){
       
        try {
            Connection connection = connector.getConnection();
             String sql = "";
             
             if(jComboBox3.getSelectedItem().toString().equals("Default")){
                 categorySelected = false;
                 sql = "select * from tasks where user_id = ? order by field(status,'Selesai','Sedang dikerja','Belum dikerja')";
             }else{ 
                 categorySelected = true;
                 sql ="select * from tasks where user_id = ? and category = ? order by field(status,'Selesai','Sedang dikerja','Belum dikerja')"; 
             }
              PreparedStatement statement =  connection.prepareStatement(sql);
             
           
             if(categorySelected == true){
                  statement.setString(1, FormLogin.userId);
                   statement.setString(2, jComboBox3.getSelectedItem().toString());
             }else{
                 statement.setString(1, FormLogin.userId);
             }
           
            ResultSet result =  statement.executeQuery();
             int i = 1;
                int r = 0;
            
            while(result.next()){
                String name = result.getString("name");
                String description = result.getString("description");
                String deadline = result.getString("deadline");
                String priority = result.getString("priority");
                String status = result.getString("status");
                String category = result.getString("category");
                 
                
                taskTable.setValueAt(i, r, 0);
                taskTable.setValueAt(name, r, 1);
                taskTable.setValueAt(description, r, 2);
                taskTable.setValueAt(deadline, r, 3);
                taskTable.setValueAt(priority, r, 4);
                 taskTable.setValueAt(status, r, 5);
                 taskTable.setValueAt(category, r, 6);
                
                i++;
                r++;
            }
         }catch(SQLException e){
             System.out.println("Gagal ambil data " + e.getMessage());
         }
    }
    
    public void getAllTask(String searchQuery){
        try {
            Connection connection = connector.getConnection();
            String sql;
            PreparedStatement statement;

            // Jika string kosong, tampilkan semua data
            if (searchQuery.isEmpty()) {
                sql = "select * from tasks where user_id = ?";
                statement = connection.prepareStatement(sql);
                statement.setString(1, FormLogin.userId);
            } else {
                // Jika ada kata kunci pencarian
                sql = "select * from tasks where user_id = ? and name like ?";
                statement = connection.prepareStatement(sql);
                statement.setString(1, FormLogin.userId);
                statement.setString(2, "%" + searchQuery + "%");
            }

            ResultSet result = statement.executeQuery();
            int i = 1;
            int r = 0;

            // Bersihkan tabel terlebih dahulu
            for (int row = 0; row < taskTable.getRowCount(); row++) {
                for (int col = 0; col < taskTable.getColumnCount(); col++) {
                    taskTable.setValueAt("", row, col);
                }
            }

            // Update tabel dengan hasil query
            while (result.next()) {
                String name = result.getString("name");
                String description = result.getString("description");
                String deadline = result.getString("deadline");
                String priority = result.getString("priority");
                String status = result.getString("status");
                String category = result.getString("category");

                taskTable.setValueAt(i, r, 0);
                taskTable.setValueAt(name, r, 1);
                taskTable.setValueAt(description, r, 2);
                taskTable.setValueAt(deadline, r, 3);
                taskTable.setValueAt(priority, r, 4);
                taskTable.setValueAt(status, r, 5);
                taskTable.setValueAt(category, r, 6);
                i++;
                r++;
            }

        } catch (Exception e) {
            System.out.println("Gagal ambil data: " + e.getMessage());
        }
    }
    
    public void getAllTasksByOrder(){
         String selectedItem = jComboBox2.getSelectedItem().toString();
            switch (selectedItem) {
                case "Prioritas":
                    getAllTaskOrderByPriority();
                    break;
                case "Status":
                    getAllTaskOrderByStatus();
                    break;
                case "Kategory":
                    break;
                default:
                    getAllTasks();
                    break;
            }
    }
    
  
    
    public void getAllCategories(){
        try {
            Connection connection = connector.getConnection();
            String sql = "select * from categories";
            Statement statement = connection.createStatement();
            
            ResultSet result = statement.executeQuery(sql);
            
            while(result.next()){
               jComboBox3.addItem(result.getString("name"));
               addTaskCategory.addItem(result.getString("name"));
            }
        } catch (Exception e) {
            System.out.println("Gagal ambil categories "+ e.getMessage());
        }
        
    }
    
    public void clearTable(){
        for(int row=0; row < taskTable.getRowCount(); row ++){
                for(int col=0; col < taskTable.getColumnCount(); col++){
                    taskTable.setValueAt("", row, col);
                }
            }
    }
    
    
         

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> addTaskCategory;
    private Custom.JTextFieldRoundedDate addTaskDeadline;
    private Custom.JTextFieldRounded addTaskDesc;
    private Custom.JTextFieldRounded addTaskName;
    private javax.swing.JComboBox<String> addTaskPriority;
    private javax.swing.JComboBox<String> addTaskStatus;
    private Custom.JButtonRoundedTambah editSaveBtn;
    private javax.swing.JComboBox<String> editTaskCategory;
    private Custom.JTextFieldRoundedDate editTaskDeadline;
    private Custom.JTextFieldRounded editTaskDesc;
    private Custom.JTextFieldRounded editTaskName;
    private javax.swing.JComboBox<String> editTaskPriority;
    private javax.swing.JComboBox<String> editTaskStatus;
    private Custom.JButtonRoundedCetak jButtonRoundedCetak1;
    private Custom.JButtonRoundedEdit jButtonRoundedEdit1;
    private Custom.JButtonRoundedHapus jButtonRoundedHapus1;
    private Custom.JButtonRoundedKembali jButtonRoundedKembali1;
    private Custom.JButtonRoundedKembali jButtonRoundedKembali2;
    private Custom.JButtonRoundedTambah jButtonRoundedTambah1;
    private Custom.JButtonRoundedTambah jButtonRoundedTambah2;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private Custom.JTextFieldRounded jTextFieldSearch;
    private javax.swing.JPanel panelAdd;
    private javax.swing.JPanel panelMain;
    private javax.swing.JPanel panelUpdate;
    private javax.swing.JPanel panelView;
    private javax.swing.JPanel pn_main;
    private javax.swing.JPanel pn_main1;
    private javax.swing.JPanel pn_main2;
    private jtable_custom.JTable_Custom taskTable;
    private javax.swing.JScrollPane taskTableRoot;
    // End of variables declaration//GEN-END:variables
}
